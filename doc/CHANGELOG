# History of Changes for HyperSQL

v3.6.5
-------------------
+ Todos/Bugs are now also collected from forms
+ new keyword verification.stats_javadoc_forms (0/1) lets you include forms
  todo/bug count within the javadoc stats on the code stats page
+ javadoc verification is now available for Oracle Forms program units as well
  (partially - no parameter validation yet). To enable, set the new keyword
  verification.verify_forms to 1 (it is disabled by default)
! missing @return made verification crash
! source code links for forms themselves where routed to line 0, which does not exist
* file_size_limit for forms now is bound to the PL/SQL code size instead of file size,
  as this is the "included source code"

v3.6.0 (14.07.2010)
-------------------
* reorganized core libraries. Some have been outsourced to a separate package
  iz_tools, as they contain quite generic stuff only
* changed the previously hardcoded hash-bang python from "/usr/bin/python" to
  "/usr/bin/env python", to let the (*nix) system decide which executable to run
+ bunch of keywords and types added for syntax highlighting (requires cleaning
  the code cache to have effect for unchanged files if using the cache)
+ some improvements concerning the processing Oracle Forms
* links on form details page fixed up
+ more details on forms: package functions/procedures are now listed - provided
  they have javadoc information attached
! lists on full-form-index were messed up
- removed trigger listings from full-form-index (they make no sense here)

v3.5.5 (13.06.2010)
-------------------
+ added support for stand-alone functions and procedures
+ added full form listing (analogue to the full package listing with funcs etc.)
+ new config keyword include_source_limit: Limit inclusion of source code by
  file size (default: '0' = unlimited, emulating behavior of previous versions)
+ more details for Oracle Forms included in output

v3.5.0 (02.06.2010)
-------------------
+ added basic support for Oracle Forms, which need to be converted to XML before
  they can be processed by HyperSQL (for *nix users, doc/frmf2xml.sh is provided
  for the conversion - which requires the Forms developer
  being installed)
+ added javadoc tag @form
+ files removed from their locations in the source tree now also get automatically
  removed from cache
+ added comment on code stats page concerning the non-inclusion of @form stats

v3.4.0 (26.05.2010)
-------------------
+ added support for triggers (incl. Javadoc tag @trigger)
* COMMENT ON ignores for where_used completed (now also ignoring e.g. MViews)
* some more code cleanup and optimization (scanning source for objects)
! missing desc for function/procedure parameters was always marked in verification,
  regardless whether 'desc' should have been checked (mandatory_tags where ignored)
+ columns (@col) are now also checked against mandatory_tags

v3.3.3 (23.05.2010)
-------------------
* Tasklists (Bug/Todo/Verification) should now be able to tell overloaded
  functions/procedures apart
! author in tasklists (if enabled) was not always updated correctly
+ new javadoc tag @used
* if no where/what used found, manually marks (@used/@uses) are evaluated and
  indicated by '@' in the lists

v3.3.0 (19.05.2010)
-------------------
* usage scan now ignores ALTER (TABLE|SYNONYM) as this is no real usage. Same
  for COMMENT ON (TABLE|COLUMN), CREATE INDEX, GRANT, and PROMPT
* bug, todo, and validation items for tables, (m)views, synonyms, and sequences
  are now added to the global bug/todo/validation lists
* reworked the where_used scan. You may not notice anything with smaller
  projects - but the speedup factor on larger projects reaches 10+ (with our
  main project - 192 files, 2.2MB, ~900 objects - processing time decreased from
  about 38min to less than 2min, which is about factor 20!)
* shortref scan (process.whereused_scan_shortrefs) is now much more reliable

v3.2.5 (12.05.2010)
-------------------
+ added support vor materialized views and tables
! columns block was shown in Javadoc HTML even when no cols had been specified
* adjusted legend on object graphs
+ javadoc: made parameter and column lists better readable
* some adjustments to the dependency graphs and dependency scans
* CSS file and project logo are now copied to HTML dir at the very beginning
  (so if processing a large project, already finished files already display correctly)

v3.2.0 (09.05.2010)
-------------------
+ added option to show author information for the items on bug/todo/verification reports
+ all graph colors are now configurable
* default graph color scheme has changed (it was far too much red in the old one).
  Now there are kind of color groups: Blueish for program objects, brownish for
  data, everything else for the rest.
+ added JavaDoc tag @col (column) - for now only accepted for views, lateron it
  will of course be used for materialized views and tables as well

v3.1.5 (02.05.2010)
-------------------
! Javadoc for sequences was ignored
* dependencies/usage: Sequences are not using any other objects
* some code compacting
! fixed "empty objects" in dependency graph (probably introduced by last release)
! percentage for sequences and synonyms on stats page was wrong
* handling of double-quoted object names (i.e. 'CREATE TABLE "DUMMY"')

v3.1.0 (28.04.2010)
-------------------
* reworked the javadoc module to make it independent from the main script and,
  at the same time, more flexible in terms of handling new object tags
+ added support for synonyms (JavaDoc tag: @synonym) and sequences (@sequence)
+ colors for object graphs (statistics and dependency graphs) are now configurable
! fixing another issue with the code highlighter (concerning HTML contained in source files)
* some more internal changes and minor fixes

v3.0.0 (25.04.2010)
-------------------
! cache purge crashed due to incomplete file name
! fixed a minor problem with the syntax highlighter and HTML entitities
+ extended the sql.keywords list for syntax highlighing
* systools.is_what now returns the object type directly (if possible)

v2.9.5 (21.04.2010)
-------------------
! some fixes concerning views
+ including JavaDoc info for views on sourcepages
* some more exception handling
+ object lists are now sorted by name, so it's easier to find the object looked for
! fixed some (rarely occuring) DivisionByZero errors on stats creation

v2.9.0 (14.04.2010)
-------------------
! what_used pages linked to calling object (instead of to the called object)
+ hyperlinking calls to called object in source code (only for funcs/procs)
* lowering log level for javadoc verification from WARNING to INFO
! code highlighter had problems with some strings
* outsourced common part of gettext initialization to its own file
+ added support for a bunch of commandline options (far too many to mention them all here)
+ added cmd opts --quiet and --cron
* replacing all occurences of "eval ('object.'+var)" with "object.__getattribute__(var)"
+ what_used was missing in function/procedure and view list
+ new option to define whether findings on javadoc verification should be logged

v2.8.0 (11.04.2010)
-------------------
+ syntax highlighter now uses regexp to split the lines (better accuracy now)
+ syntax highlighter does now recognize keywords containing parenthesis, e.g. VARCHAR2(255)
+ syntax highlighter now also cares for numbers and strings
+ establishing some caching to speed up things (wow: factor ~200 for the
  highlighter when found in cache, and even ~300 for dependency graphs on
  average!) Caching is enabled by default, which reduces the average
  processing time up to ~50%. If you want it disabled, add "cache = 0" in
  your .ini files "Process" section.

v2.7.0 (07.04.2010)
-------------------
+ added what_used
! fixed some more false positives in usage reference
! javadoc verification was partly broken (missed the missing descriptions)

v2.6.5 (04.04.2010)
-------------------
+ where_used pages now also list the name of calling objects and link to
  their JavaDoc reference (if possible/available)
* alternating row colors now also in where_used tables
! worked around some possible division by zero errors

v2.6.0 (31.03.2010)
-------------------
+ added smarter progress bar
* some adjustments for depgraph.set_charset
+ drawing up to 4 depgraphs now (file2file, file2object, object2file, object2object)
* graphviz default processor changed to fdp
* excluding private objects from depgraph
- dropped config parameter depgraph.ranksep
+ added config parameters in section DepGraph: ranksep_dot, ranksep_twopi,
  len_fdp, len_neato, mindist_circo
* graphviz cmdline now logged at debug level (instead of info)
+ added deltmp var to depgraph class (plus corresponding DepGraph.deltmp)

v2.5.0 (28.03.2010)
-------------------
+ new module systools created for misc. system stuff like opening files etc.
+ new config var: process.javadoc (whether JavaDoc should be evaluated), default 1
+ dependency graph added (still needs some more tweaking)
* removed the last remaining "tabs" from code - so there shouldn't be any
  "indentation errors" anymore (as have been reported for some systems)

v2.4.0 (24.03.2010)
-------------------
+ added gettext support
+ added locales (currently only en_US and de_DE - all other de_*
  simply link to the latter, en_* to the former)
+ added new JavaDoc tags @since, @ignore, @uses, @throws
* some code hardening for codecs stuff

v2.3.0 (21.03.2010)
-------------------
+ where_used links and alternating row colors in file pages
+ "describing" JavaDoc elements (with just one "text" option) can now be
  used repeatedly for the same object (e.g. multiple todo items)
* optimized where_used scan and full package list creation (less code now)

v2.2.0 (17.03.2010)
-------------------
+ basic verification of function/procedure parameters against JavaDoc
  (parameter count)
+ added pie charts to the stats page
+ added object and javadoc statistics to stats page
+ row colors are now alternating to make long lists better readable

v2.1.0 (14.03.2010)
-------------------
+ added basic JavaDoc verification stuff - now you can define mandatory tags!
  * new config section [Verification] with keywords verify_javadoc = 0|1,
    mandatory_tags = tag1 tag2..., and javadoc_mandatory
  * new page 'report' for the verification report
  * failures are logged at WARNING level (if verify_javadoc = 1)
  if enabled, this will also check for missing names and descriptions, plus
  for missing return values of functions
+ calculating "lines of code" and some more statistics. The former will at
  least be logged (at INFO level) - but a statistics page can be enabled
  via the config.
! hopefully fixed "local where_used" stuff to be more precise

v2.0.0 (10.03.2010)
-------------------
! function/procedure JavaDoc links missing in full package list
* some more (internal) code documentation and reorganization
+ marking functions/procedures public/private in the overview of packages when
  JavaDoc has been set up for them.
+ code highlighter now handles block comments (/*..*/)
* JavaDoc Syntax element was too verbose
* shortref scan was logging too verbose

v1.10.0 (06.03.2010)
--------------------
* adapted a patch made against Randys original code on 07/12/2005 by Matthias
  Schade, which lets the code parser ignore block comments and string contents
  plus lets it scan for local calls inside package bodies
+ new boolean options in [Process]: whereused_scan_shortrefs, whereused_scan_instring
+ new tags: @ticket, @wiki (options: [General] bugzilla_url, wiki_url - with
  placeholder for the bug ID resp. wiki page name, so it should be useable
  with all kind of trackers/wikis.
+ scanning for ticket:123 and wiki:pagename in all JavaDoc text fields and
  turning this into hyperlinks (if ticket_url and wiki_url are set correspondingly)
! double quotes in second line of JavaDoc <text> caused HyperSQL to crash with
  a SyntaxError exception
+ added "goto TOP" (TopOfPage) link
* some more code documentation (internal)

v1.9.0 (03.03.2010)
-------------------
* outsourced config class (HyperConf). Now it reads all available config files,
  overwriting more common data (default config files) by project specific ones
+ extended the ConfigParser with the IniParser class (which then is extended
  by HyperConf). This way we can intercept possible user errors (specifiying
  invalid configuration values) in a better way
+ added logging facility (including a corresponding config section)
! overloading functions/procedures should no longer cause javadoc confusion

v1.8.0 (26.02.2010)
-------------------
+ added project wide Todo and Bug list (compiled of the JavaDoc @todo and @bug
  comments) - now you can get an overview over all open tasks!
* cleaning up some clones (centralizing similar code, e.g. creation of index
  pages for functions/procedures, files with/without path)
- removed the ToDoList from output
+ generated HTML should no be w3c conform - provided you configured the character
  set of your input files correctly (config file, section General, encoding)

v1.7.0 (23.02.2010)
-------------------
+ option blind_offset added (to control parsing for "anonymous JavaDoc segments")
* code reorganization: outsourced some code to modules (hyperjdoc, hypercore, hypercode)
+ "describing" JavaDoc elements (with just one "text" option) can now span multiple lines
! converting crash when configured top_level_directory did not exist into a
  standard exit with proper error message
! fixed the additional empty lines in code listings
+ new keyword include_source (section Process) to make the inclusion of source
  code optional

v1.6.0 (20.02.2010)
-------------------
+ added javadoc tag @license
+ missing details added to package info
! some where_used were not found since their lines were considered "having not
  enough touples" (<2). Disabled that check for now - considering to make it
  an option in the future
* reorganized configuration and prepared it for some new features planned
+ new keyword project_info_file in the configurations General section (additional
  content for the start page)
+ added possibility to deactivate unwanted pages
+ Index Page names (as appearing in the links)  now are configurable

v1.5.0 (16.02.2010)
-------------------
+ added Javadoc parsing and creating of Javadoc documentation
+ added some more configuration options
+ added more documentation (especially for Javadoc and configuration)
! some formatting issues fixed
* reworked main index (startpage)

v1.3.0 (10.02.2010)
-------------------
+ adding more code comments for better code documentation
+ adding apidoc (doc/apidoc/*), including a tiny shell script to generate it
+ added very basic syntax highlighting to the (SQL) source code presentation
! source code had been included into the page without escaping HTML chars,
  which sometimes lead to strange behavior in the browser

v1.2 (10.02.2010)
-----------------
+ improved config parser: now the .ini file does not have to contain all keywords
+ implemented fallback on search for the config file. Now searches for the
  project specific file (the new optional command line parameter + '.ini') first,
  then lowercase filename, then HyperSQL.ini (plus lowercase), and finally falls
  back to internally defined defaults

v1.1 (09.02.2010)
-----------------
* updated version by Izzy
+ configuration moved into .ini file
+ optional command line parameter to specify the project (and hence the .ini used)
* completely reworked look-and-feel of the HTML pages created (javadoc like)

v1.0 (09.2001)
-----------------
* initial version by Randy
